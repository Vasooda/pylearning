
#Hackbright Questions

print('-------------- Hackbright Questions ----------------')
print('--------------sum of list----------------')

#Q1: Parameter is the variable listed inside the parentheses and arguemnt is the value sent to the funciton when its called
def all_numbers(nums):
  total = 0
  for items in nums:
    total += items
    #print(total)
  return total 
  #print(total) 
nums = [1,2,3] 

print(all_numbers(nums))

#Q2: Return indices of even numbers

print('-------------- return even number within a list ----------------')

#return even numbers within a list
newlist = []
def even_numbers(li):
  for item in li:
    if item % 2 == 0:

      newlist.append(item)
  return newlist

li = [1,2,3,4]

print(even_numbers(li))

print('------------- use range and length to return index of a list-----------------')

#using range and length to return the index of a list
newlist = []
def even_numbers(li):
  for item in range(len(nums)):
    if item % 2 == 0:
      
      newlist.append(item)
  return newlist

li = [1,2,3,4]

print(even_numbers(li))

print('-------------- use index to return length of list ----------------')

#using the index method to return length of the list
wildflowers = []
def garden(flowers):
  for item in flowers:
    index = flowers.index(item)
    if item % 2 == 0:
      wildflowers.append(index)
  return wildflowers

flowers = [1,2,3,4]

print(garden(flowers))

print('------------- split text into list -----------------')

#split a body of text into a list and print     
def convert(poem):
  return(poem[0].split())

poem = ['in Flanders fields the poppies blow Between the crosses, row on row, That mark our place; and in the sky The larks, still bravely singing, fly Scarce heard amid the guns below. We are the Dead. Short days ago We lived, felt dawn, saw sunset glow, Loved and were loved, and now we lie, In Flanders fields. Take up our quarrel with the foe: To you from failing hands we throw The torch; be yours to hold it high. If ye break faith with us who die We shall not sleep, though poppies grow In Flanders fields.']

letters = convert(poem)
print(letters)

print('------------------------------')

''''
def get_longestword(letters):
  longest_word = ''

  for item in letters:
    #if range(len(item)) > range(len(longest_word)):
    #  longest_word = item
    return longest_word   

  print(longest_word(letters))


def get_longword(letters):
  long_word = max(letters, key=len)
  return long_word

'''
print('-----------------return the longest word------------------------')

#return the longest word
def find_longest_word(letters):
  longest_word = max(letters, key=len)
  return longest_word

print(find_longest_word(letters))

print('-----------------vowel words------------------------')

vowelwords = []
def get_vowelwords(letters):
  for item in letters:
    if item[0] in 'aeiou':
      vowelwords.append(item)
  return vowelwords

print(get_vowelwords(letters))

print('-----------------even or odd------------------------')

newlist = []

def even_or_odd_numbers(li):
  even = 0
  odd = 0

  for item in li:
    if item % 2 == 0:
      even += even + 1
    else:
      odd += odd + 1

  if even > odd:
    return 'even'
  elif odd > even:
    return 'odd'
  else:
    return 'even and odd'

li = [1,2,3,4,5]

print(even_or_odd_numbers(li))