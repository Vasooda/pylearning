#Fundamental Data Types

#print action with mathematical operators
print(2+4)
print(2-4)
print(2*4)
print(2/4)

#type action that tells you the data type
print(type(6))
print(type(2+4))
print(type(2-4))
print(type(2*4))
print(type(2/4)) #0.5 hence a floting point number

print(type(0)) #int because there are no decimal points

#float takes up more space in memory - a floating point number stores numbers in different locations because of the decimal place since decimal place is not a a binary 

print(type(20+1.1)) #one integer and one floating point will result as a float


print (type(9.9+1.1)) #two floating point numbers

#Power^
print(2 ** 3) #to the power off

#Integer rouded down
print(2//4) #returns an integer rounded down

#Modulus
print(5%4) #whats the remainder of this division

int
float
#int and floats are stored as binary numbers

print(bin(5)) #returns the binary representation of the number 5

print(int ('0b101',2))
#this is a binary number in case two and I want to convert it to an integer

bool
str
list
tuple
set
dict

None 
complex 
#only used if you're doing complex math mostly will not use it its equalivant to a real number

#Program basically tells a computer what to do. What that means is its all about storing information and taking action on that information

#How can we create, store, change, remove the data from the machine?

#Classes -> custom types 

#Specialized Data Types we can use from modules - not built into python but are special packages and modules we can use from libraries

#None 


print('Math Functions')

print(round(3.1))
print(abs(-20)) #absolute value means no negative numbers